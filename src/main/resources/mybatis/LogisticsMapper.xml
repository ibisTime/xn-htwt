<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.loan.dao.ILogisticsDAO">
    <resultMap id="logistics_DB_result" type="logistics">
        <result column="code" property="code"/>
        <result column="type" property="type"/>
        <result column="cur_node_type" property="curNodeType"/>
        <result column="biz_code" property="bizCode"/>
        <result column="user_id" property="userId"/>
        <result column="team_code" property="teamCode"/>

        <result column="from_node_code" property="fromNodeCode"/>
        <result column="to_node_code" property="toNodeCode"/>
        <result column="send_type" property="sendType"/>

        <result column="logistics_company" property="logisticsCompany"/>
        <result column="logistics_code" property="logisticsCode"/>
        <result column="send_datetime" property="sendDatetime"/>
        <result column="send_note" property="sendNote"/>
        <result column="receipt_datetime" property="receiptDatetime"/>

        <result column="sender" property="sender"/>
        <result column="receiver" property="receiver"/>
        <result column="filelist" property="filelist"/>
        <result column="status" property="status"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <sql id="where_condition">
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="code != null and code != '' ">
                AND t.code = #{code}
            </if>
            <if test="type != null and type != '' ">
                <choose>
                  <when test='type == "1"'>
                    AND (((t.status = '0' or t.status = '3') AND frn.role_code=#{roleCode}) OR ((t.status = '1' or t.status = '2') AND trn.role_code=#{roleCode}))
                  </when>
                  <otherwise>
                    AND t.type = #{type}
                  </otherwise>
                </choose>
            </if>
            <if test="typeList != null and typeList.size() != 0 ">
                AND t.type in
                <foreach collection="typeList" index="index" item="item" open="(" separator=","
                        close=")">
                    #{item}
                </foreach>
            </if>
            <if test="bizCode != null and bizCode != '' ">
                AND t.biz_code = #{bizCode}
            </if>
            <if test="bizCodeForQuery != null and bizCodeForQuery != '' ">
                AND t.biz_code like "%"#{bizCodeForQuery}"%"
            </if>
            <if test="fromNodeCode != null and fromNodeCode != '' ">
                AND t.from_node_code = #{fromNodeCode}
            </if>
            <if test="toNodeCode != null and toNodeCode != '' ">
                AND t.to_node_code = #{toNodeCode}
            </if>
            <if test="userId != null and userId != '' ">
                AND t.user_id = #{userId}
            </if>
            <if test="teamCode != null and teamCode != '' ">
                AND t.team_code = #{teamCode}
            </if>
            <if test="receiver != null and receiver != '' ">
                AND t.receiver = #{receiver}
            </if>
            <if test="status != null and status != '' ">
                AND t.status = #{status}
            </if>

            <if test="statusList != null and statusList != '' ">
                AND t.status in
                <foreach collection="statusList" index="status" item="item" open="(" separator=","
                        close=")">
                    #{item}
                </foreach>
            </if>
        </trim>
    </sql>


    <select id="select_logistics" parameterType="logistics" resultMap="logistics_DB_result">
        SELECT
        distinct
        t.code
        ,t.type
        ,t.cur_node_type
        ,t.biz_code
        ,t.user_id
        ,t.team_code
        ,t.from_node_code

        ,t.to_node_code
        ,t.send_type
        ,t.logistics_company

        ,t.logistics_code
        ,t.send_datetime
        ,t.send_note
        ,t.receipt_datetime
        ,t.sender
        ,t.receiver
        ,t.filelist
        ,t.status
        ,t.remark
        FROM tdq_logistics t
        left join tsys_role_node frn on t.from_node_code=frn.node_code
        left join tsys_role_node trn on t.to_node_code=trn.node_code
        <include refid="where_condition"/>
        <trim prefix="ORDER BY ">
            <if test="order != null and order != '' ">
                t.${order}
            </if>
        </trim>
    </select>

    <select id="select_logistics_count" parameterType="logistics" resultType="java.lang.Long">
      SELECT count(1) FROM (SELECT  distinct t.code FROM tdq_logistics t
      left join tsys_role_node frn on t.from_node_code=frn.node_code
      left join tsys_role_node trn on t.to_node_code=trn.node_code
      <include refid="where_condition"/>)tb
    </select>

    <insert id="insert_logistics" parameterType="logistics">
		INSERT INTO tdq_logistics(
		code
		,type
		,cur_node_type
		,biz_code
		,user_id
		,team_code
		,from_node_code
		
		,to_node_code
		,receiver
		,status
		)
		VALUES(
		#{code}
		,#{type}
		,#{curNodeType}
		,#{bizCode}
		,#{userId}
		,#{teamCode}
		,#{fromNodeCode}
		
		,#{toNodeCode}
		,#{receiver}
		,#{status}
		)
	</insert>

    <update id="update_logistics_send" parameterType="logistics">
		UPDATE tdq_logistics t
		SET
		t.send_type = #{sendType}
		,t.logistics_company = #{logisticsCompany}
		,t.logistics_code = #{logisticsCode}
		,t.send_datetime = #{sendDatetime}
		,t.sender = #{sender}
		
		,t.send_note = #{sendNote}
		,t.filelist = #{filelist}
		,t.status = #{status}
		WHERE code = #{code}
	</update>

    <update id="update_logistics_receive" parameterType="logistics">
		UPDATE tdq_logistics t
		SET
		t.receipt_datetime = #{receiptDatetime}
		,t.status = #{status}
		,t.receiver = #{receiver}
		,t.remark = #{remark}
		WHERE code = #{code}
	</update>

    <update id="update_logistics_sendAgain" parameterType="logistics">
		UPDATE tdq_logistics t
		SET
		t.send_datetime = #{sendDatetime}
		,t.send_note = #{sendNote}
		,t.status = #{status}
		WHERE code = #{code}
	</update>

    <delete id="delete_logistics" parameterType="logistics">
		DELETE FROM tdq_logistics
		WHERE code = #{code}
	</delete>
</mapper>
