<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cdkj.loan.dao.ISeriesDAO">
    <resultMap id="series_DB_Result" type="series">
        <result column="code" property="code"/>
        <result column="brand_id" property="brandId"/>
        <result column="series_id" property="seriesId"/>
        <result column="type" property="type"/>
        <result column="maker_type" property="makerType"/>
        <result column="brand_code" property="brandCode"/>
        <result column="name" property="name"/>
        <result column="series_group_name" property="seriesGroupName"/>
        <result column="slogan" property="slogan"/>
        <result column="adv_pic" property="advPic"/>
        <result column="pic_number" property="picNumber"/>
        <result column="price" property="price"/>
        <result column="highest" property="highest"/>
        <result column="lowest" property="lowest"/>
        <result column="level" property="level"/>
        <result column="location" property="location"/>
        <result column="order_no" property="orderNo"/>
        <result column="status" property="status"/>
        <result column="updater" property="updater"/>
        <result column="update_datetime" property="updateDatetime"/>
        <result column="remark" property="remark"/>
    </resultMap>

    <sql id="where_condition">
        <trim prefix="WHERE" prefixOverrides="AND | OR">
            <if test="code != null and code != '' ">
                AND t.code = #{code}
            </if>
            <if test="brandId != null and brandId != '' ">
                AND t.brand_id = #{brandId}
            </if>
            <if test="seriesId != null and seriesId != '' ">
                AND t.series_id = #{seriesId}
            </if>
            <if test="type != null and type != '' ">
                AND t.type = #{type}
            </if>
            <if test="makerType != null and makerType != '' ">
                AND t.maker_type = #{makerType}
            </if>
            <if test="level != null and level != '' ">
                AND t.level = #{level}
            </if>
            <if test="brandCode != null and brandCode != '' ">
                AND t.brand_code = #{brandCode}
            </if>
            <if test="name != null and name != '' ">
                AND t.name like "%"#{name}"%"
            </if>
            <if test="slogan != null and slogan != '' ">
                AND t.slogan = #{slogan}
            </if>
            <if test="advPic != null and advPic != '' ">
                AND t.adv_pic = #{advPic}
            </if>
            <if test="price != null and price != '' ">
                AND t.price = #{price}
            </if>
            <if test="location != null and location != '' ">
                AND t.location = #{location}
            </if>
            <if test="orderNo != null and orderNo != '' ">
                AND t.order_no = #{orderNo}
            </if>
            <if test="status != null and status != '' ">
                AND t.status = #{status}
            </if>
            <if test="updater != null and updater != '' ">
                AND t.updater = #{updater}
            </if>
            <if test="updateDatetime != null and updateDatetime != '' ">
                AND t.update_datetime = #{updateDatetime}
            </if>
            <if test="remark != null and remark != '' ">
                AND t.remark = #{remark}
            </if>


        </trim>
    </sql>

  <sql id="car_condition">
    <trim prefix="WHERE" prefixOverrides="AND | OR">
      <if test="queryName != null and queryName != '' ">
        AND tc.series_name like "%"#{queryName}"%" OR tc.brand_name like "%"#{queryName}"%"
        OR tc.name like "%"#{queryName}"%"
      </if>
      <if test="displacementStart != null and displacementStart != '' ">
        <![CDATA[AND tc.displacement > #{displacementStart}]]>
      </if>
      <if test="displacementEnd != null and displacementEnd != '' ">
        <![CDATA[AND tc.displacement <= #{displacementEnd}]]>
      </if>
      <if test="priceStart != null and priceStart != '' ">
        <![CDATA[AND tc.sale_price > #{priceStart}]]>
      </if>
      <if test="priceEnd != null and priceEnd != '' ">
        <![CDATA[AND tc.sale_price <= #{priceEnd}]]>
      </if>
      <if test="levelList != null and levelList.size()>0  ">
        AND tc.level in
        <foreach item="item" index="index" collection="levelList" open="(" separator=","
          close=")">
          #{item}
        </foreach>
      </if>
      <if test="versionList != null and versionList.size()>0">
        AND tc.version in
        <foreach item="item" index="index" collection="versionList" open="(" separator=","
          close=")">
          #{item}
        </foreach>
      </if>
      <if test="structureList != null and structureList.size()>0 ">
        AND tc.structure in
        <foreach item="item" index="index" collection="structureList" open="(" separator=","
          close=")">
          #{item}
        </foreach>
      </if>


    </trim>
  </sql>



    <select id="select_series" parameterType="series" resultMap="series_DB_Result">
        SELECT
        t.code
        ,t.brand_id
        ,t.series_id
        ,t.type
        ,t.maker_type
        ,t.brand_code
        ,t.name
        ,t.series_group_name
        ,t.slogan
        ,t.adv_pic
        ,t.pic_number
        ,t.price
        ,t.highest
        ,t.lowest
        ,t.level
        ,t.location
        ,t.order_no
        ,t.status
        ,t.updater
        ,t.update_datetime
        ,t.remark
        FROM
        tht_series t
        <include refid="where_condition"/>
        <trim prefix="ORDER BY ">
            <if test="order != null and order != '' ">
                t.${order}
            </if>
        </trim>
    </select>

    <select id="select_series_count" parameterType="series" resultType="java.lang.Long">
        SELECT count(1) FROM tht_series t
        <include refid="where_condition"/>
    </select>

    <insert id="insert_series" parameterType="series">
		INSERT INTO tht_series(
		code
		,brand_id
		,series_id
		,type
		,maker_type
		,brand_code
		,name
		,series_group_name
		,slogan
		,adv_pic
		,pic_number
		,price
		,highest
		,lowest
		,level
		,location
		,order_no
		,status
		,updater
		,update_datetime
		,remark
		)
		VALUES(
		#{code}
		,#{brandId}
		,#{seriesId}
		,#{type}
		,#{makerType}
		,#{brandCode}
		,#{name}
		,#{seriesGroupName}
		,#{slogan}
		,#{advPic}
		,#{picNumber}
		,#{price}
		,#{highest}
		,#{lowest}
		,#{level}
		,#{location}
		,#{orderNo}
		,#{status}
		,#{updater}
		,#{updateDatetime}
		,#{remark}
		)
	</insert>

    <insert id="insert_seriesList" parameterType="List">
        INSERT INTO tht_series(
        code
        ,brand_id
        ,series_id
        ,type
        ,maker_type
        ,brand_code
        ,name
        ,series_group_name
        ,slogan
        ,adv_pic
        ,pic_number
        ,price
        ,highest
        ,lowest
        ,level
        ,location
        ,order_no
        ,status
        ,updater
        ,update_datetime
        ,remark
        )
        VALUES
        <foreach collection="list" item="series" separator=",">
            (
            #{series.code}
            ,#{series.brandId}
            ,#{series.seriesId}
            ,#{series.type}
            ,#{series.makerType}
            ,#{series.brandCode}
            ,#{series.name}
            ,#{series.seriesGroupName}
            ,#{series.slogan}
            ,#{series.advPic}
            ,#{series.picNumber}
            ,#{series.price}
            ,#{series.highest}
            ,#{series.lowest}
            ,#{series.level}
            ,#{series.location}
            ,#{series.orderNo}
            ,#{series.status}
            ,#{series.updater}
            ,#{series.updateDatetime}
            ,#{series.remark}
            )
        </foreach>
    </insert>

    <update id="update_series" parameterType="series">
		UPDATE tht_series ts SET
		ts.brand_code = #{brandCode}
		,ts.name  = #{name}
		,ts.slogan = #{slogan}
		,ts.adv_pic  = #{advPic}
		,ts.pic_number=#{picNumber}
		,ts.price = #{price}
		,ts.level=#{level}
		,ts.updater = #{updater}
		,ts.update_datetime = #{updateDatetime}
		,ts.remark = #{remark}
		WHERE ts.code = #{code};
		UPDATE tht_car tc SET
		tc.series_name=#{name}
		WHERE tc.series_code=#{code};
	</update>

    <update id="update_series_up" parameterType="series">
		UPDATE tht_series SET
		location = #{location}
		,order_no = #{orderNo}
		,status = #{status}
		,updater = #{updater}
		,update_datetime = #{updateDatetime}
		WHERE code = #{code}
	</update>

    <update id="update_series_down" parameterType="series">
      UPDATE tht_series SET
      status = #{status}
      ,updater = #{updater}
      ,update_datetime = #{updateDatetime}
      WHERE code = #{code}
    </update>

    <update id="update_series_highest" parameterType="series">
      UPDATE tht_series SET
      highest = #{highest}
      WHERE code = #{code}
    </update>

    <update id="update_series_lowest" parameterType="series">
      UPDATE tht_series SET
      lowest = #{lowest}
      WHERE code = #{code}
    </update>

    <update id="update_series_highestAndLowest" parameterType="series">
      UPDATE tht_series SET
      highest = #{highest}
      ,lowest = #{lowest}
      WHERE code = #{code}
    </update>

    <delete id="delete_series" parameterType="series">
      DELETE FROM tstd_cnavigate WHERE parent_code in  (SELECT code FROM tht_car WHERE series_code=#{code});
      DELETE FROM tht_car_carconfig WHERE car_code in (SELECT code FROM tht_car WHERE series_code=#{code});
      DELETE FROM tht_car_order WHERE car_code in (SELECT code FROM tht_car WHERE series_code=#{code});
      DELETE FROM tht_action WHERE to_code in (SELECT code FROM tht_car WHERE series_code=#{code});
      DELETE FROM tht_car WHERE series_code=#{code};
      DELETE FROM tht_series WHERE code = #{code};
    </delete>

    <delete id="delete_seriesByCondition" parameterType="series">
        DELETE FROM tht_series where type = '1'
    </delete>

    <select id="select_series_by_car_condition" parameterType="series" resultMap="series_DB_Result">
      SELECT
      t.code
      ,t.brand_id
      ,t.series_id
      ,t.type
      ,t.maker_type
      ,t.brand_code
      ,t.name
      ,t.series_group_name
      ,t.slogan
      ,t.adv_pic
      ,t.pic_number
      ,t.price
      ,t.highest
      ,t.lowest
      ,t.level
      ,t.location
      ,t.order_no
      ,t.status
      ,t.updater
      ,t.update_datetime
      ,t.remark
      FROM
      tht_series t WHERE t.code in (SELECT tc.code FROM tht_car tc
      <include refid="car_condition"/>)
        <trim prefix="ORDER BY ">
          <if test="order != null and order != '' ">
            t.${order}
          </if>
        </trim>
    </select>

    <select id="select_series_count_by_car_condition" parameterType="series" resultType="java.lang.Long">
      SELECT count(1) FROM tht_series t WHERE t.code in (SELECT tc.code from tht_car tc
      <include refid="car_condition"/>)
    </select>

</mapper>